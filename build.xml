<project xmlns:ivy="antlib:org.apache.ivy.ant" name="lasso" default="build-core">
  <property name="revision" value="0.13" />
  <property name="ivy.settings.dir" value="../settings" />
  <property file="${ivy.settings.dir}/ivysettings.properties" />
  <property name="src.dir" value="src" />
  <property name="java.src.dir" value="${src.dir}/java" />
  <property name="scala.src.dir" value="${src.dir}/scala" />
  <property name="clojure.src.dir" value="${src.dir}/clojure" />
  <property name="build.dir" value="build" />
  <property name="jar.file" value="${build.dir}/lasso.jar" />
  <property name="lib.dir" value="lib" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="resources.dir" value="${build.dir}/resources" />

  <target name="resolve">
    <ivy:retrieve/>
  </target>
  
  <target name="init" depends="resolve">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${resources.dir}" />
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <path id="java_scala.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${build.dir}">
      <include name="**/*.class" />
    </fileset>
  </path>

  <taskdef resource="scala/tools/ant/antlib.xml">
    <classpath>
      <pathelement location="${lib.dir}/scala-compiler-2.7.3.jar" />
      <pathelement location="${lib.dir}/scala-library-2.7.3.jar" />
    </classpath>
  </taskdef>

  <target name="build-core" depends="clean,init">
    <scalac srcdir="${src.dir}" destdir="${classes.dir}">
      <classpath refid="java_scala.classpath" />
      <include name="scala/main/**/*.scala" />
      <include name="java/**/*.java" />
    </scalac>
    <javac srcdir="${java.src.dir}" destdir="${classes.dir}">
      <classpath refid="java_scala.classpath"/>
    </javac>
    <java classname="clojure.lang.Compile" fork="true">
      <classpath>
	<fileset dir="${lib.dir}">
	  <include name="**/*.jar" />
	</fileset>
	<path location="${classes.dir}" />
	<path location="${clojure.src.dir}" />
      </classpath>
      <jvmarg value="-Dclojure.compile.path=${classes.dir}" />
      <arg value="com.wellhead.lasso.ClojureReader" />
    </java>
    <copy todir="${resources.dir}" file="resources/logback.xml" />
  </target>

  <target name="build-tests" depends="build-core">
    <scalac srcdir="${src.dir}" destdir="${classes.dir}">
      <classpath refid="java_scala.classpath" />
      <include name="scala/tests/**/*.scala" />
    </scalac>
  </target>

  <target name="jar" depends="build-tests">
    <jar destfile="${build.dir}/${ant.project.name}.jar">
      <fileset dir="${classes.dir}" />
      <fileset dir="${resources.dir}" />
    </jar>
  </target>

  <target name="test" depends="jar">
    <echo>testing parser</echo>
    <java classname="org.scalatest.tools.Runner" fork="true">
      <classpath>
	<path location="${jar.file}" />
	<fileset dir="${lib.dir}">
	  <include name="**/*.jar" />
	</fileset>
      </classpath>

      <arg value="-p" />
      <arg value="${jar.file}"/>
      <arg value="-o" />
    </java>
  </target>

  <target name="publish" depends="jar" description="--> publish this project in the ivy repository">
    <property name="revision" value="${version}"/>
    <delete file="${build.dir}/ivy.xml"/>
    <ivy:publish artifactspattern="${build.dir}/[artifact].[ext]" 
		 pubrevision="${revision}" 
		 status="release"
		 resolver="local"
		 overwrite="true"
		 />
    <echo message="project ${ant.project.name} released with version ${revision}" />
  </target>
</project>